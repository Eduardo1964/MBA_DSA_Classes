?httr
library("httr")
library("rvest")
?httr
?rvest
?read_html
#função de leitura
wikipedia <- read_html("https://en.wikipedia.org/wiki/Web_scraping")
View(wikipedia)
?html_elements
#busca nó de título
wikipedia %>% html_elements("title")
?html_text
#busca nó de heading, mas tira parte do código HTML
wikipedia %>% html_elements("h1") %>% html_text()
#busca nó de heading, mas tira parte do código HTML
wikipedia %>% html_elements("h1") %>% html_text()
#busca nó de parágrafo, mas tira parte do código HTML
data <- wikipedia %>% html_elements("p") %>% html_text()
data
?length
length(data)
data[2]
library("rvest")
#função de leitura
wikipedia <- read_html("https://en.wikipedia.org/wiki/Web_scraping")
#Busca específico
# "FAQ about linking – Are website terms of use binding contracts?".
body_text <- wikipedia %>% html_nodes("#cite_note-5") %>% html_text()
#Busca específico
# "FAQ about linking – Are website terms of use binding contracts?".
body_text <- wikipedia %>% html_nodes("#cite_note-5") %>% html_text()
body_text
?substr
substr(body_text, start = 1, stop = 20)
?nchar
substr(body_text, start = 20, stop = nchar(body_text))
substr(body_text, start = 21, stop = nchar(body_text))
#Busca item listado
techniques <- wikipedia %>% html_nodes("#Techniques") %>% html_text()
techniques
?html_nodes
library("rvest")
#função de leitura
wikipedia <- read_html("https://en.wikipedia.org/wiki/Web_scraping")
#Busca específico
# "FAQ about linking – Are website terms of use binding contracts?".
body_text <- wikipedia %>% html_elements("#cite_note-5") %>% html_text()
substr(body_text, start = 1, stop = 20)
substr(body_text, start = 21, stop = nchar(body_text))
#Busca item listado
techniques <- wikipedia %>% html_elements("#Techniques") %>% html_text()
techniques
library("httr")
#Usa método GET()
website <- GET("http://www.r-datacollection.com/materials/html/OurFirstHTML.html")
?content
#Visualiza como texto
content(website, "text")
#Parse
data <- content(website, "parsed")
data
#Parse
content(website, "parsed")
#Visualiza como texto
content(website, "text")
library("rvest")
library("httr")
library("jsonlite")
library("data.table")
#Parâmetros
country = "BR"
country2 = "AR"
indicador = "77823"  #pib per capita
indicador2 = "77819" #gastos com educação
library("rvest")
library("httr")
library("jsonlite")
library("data.table")
#Mostra API de países do IBGE
#https://servicodados.ibge.gov.br/api/docs/paises
#Parâmetros
country = "BR"
indicador = "77823"  #pib per capita
indicador2 = "77819" #gastos com educação
url = "https://servicodados.ibge.gov.br/api/v1/paises/indicadores/BR"
page_data <- GET(url)
content(page_data,"parsed")
result <- fromJSON(rawToChar(page_data$content))
url = "https://servicodados.ibge.gov.br/api/v1/paises/indicadores/77823"
page_data <- GET(url)
content(page_data,"parsed")
result <- fromJSON(rawToChar(page_data$content))
View(result)
page_data <- GET(url)
page_data$content
?rawToChar
?fromJSON
result <- fromJSON(rawToChar(page_data$content))
View(result)
url2 = "https://servicodados.ibge.gov.br/api/v1/paises/BR/indicadores/77819"
page_data2 <- GET(url2)
#tipo de arquivo
http_type(page_data2)
jsonText <- content(page_data2, "text")
jsonParsed <- content(page_data2, "parsed")
jsonText
jsonParsed
View(jsonParsed)
resultText<- fromJSON(jsonText)
View(resultText)
df <- lapply(jsonParsed[[1]],as.data.table)
View(df)
View(jsonParsed)
jsonParsed[[1]][["series"]][[1]][["serie"]][[7]][["2000"]]
library("rvest")
library("httr")
library("jsonlite")
library("data.table")
#Mostra API de países do IBGE
#https://servicodados.ibge.gov.br/api/docs/paises
#Parâmetros
#country = "BR"
#"77823"  #pib per capita
#"77819" #gastos com educação
#1 - Listagem de indicadores - mostra na página web
url = "https://servicodados.ibge.gov.br/api/v1/paises/indicadores/77823"
page_data <- GET(url)
result <- fromJSON(rawToChar(page_data$content))
#2 - Indicadores - mostra na página web
url2 = "https://servicodados.ibge.gov.br/api/v1/paises/BR/indicadores/77819"
page_data2 <- GET(url2)
#tipo de arquivo
http_type(page_data2)
jsonText <- content(page_data2, "text")
jsonParsed <- content(page_data2, "parsed")
View(jsonParsed)
jsonParsed[[1]][["series"]][[1]][["serie"]][[2]][["1990"]]
View(result)
