library(DBI)
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "world",
host = "localhost",
username = "root",
password = "Mysql_2022")
rs <- dbSendQuery(conn, "SELECT * FROM City;")
View(rs)
rs@Id
dataframe<-dbFetch(rs)
View(dataframe)
library(odbc)
sort(unique(odbcListDrivers()[[1]]))
install.packages("odbc")
library("odbc")
sort(unique(odbcListDrivers()[[1]]))
pacotes <- c("odbc","DBI","dplyr","tidyverse")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
sort(unique(odbcListDrivers()[[1]]))
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "world",
host = "localhost",
username = "root",
password = "2022")
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "world",
host = "localhost",
username = "root",
password = "Mysql_2022")
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "world",
host = "localhost",
username = "root",
password = "Mysql_2022")
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "world",
host = "localhost",
username = "root",
password = "Mysql_2022")
View(conn)
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "world",
host = "localhost",
username = "root",
password = "Mysql_202") #seu password
#Métodos
#1 - lista Dbs
dbListTables(conn)
#2 - lista campos
dbListFields(conn,"city")
?dbWriteTable
#3 - Read table
dbReadTable(conn,"city")
db <- dbReadTable(conn,"city")
View(db)
#4 - segunda forma de obter dataframe com consulta
rs <- dbSendQuery(conn, "SELECT * FROM City;")
View(rs)
rs@Id
dataframe<-dbFetch(rs)
View(dataframe)
View(db)
View(dataframe)
#4 - segunda forma de obter dataframe com consulta
rs <- dbSendQuery(conn, "SELECT * FROM City LIMIT 1000;")
dbClearResult(rs)
#4 - segunda forma de obter dataframe com consulta
rs <- dbSendQuery(conn, "SELECT * FROM City LIMIT 1000;")
dataframe<-dbFetch(rs)
View(dataframe)
View(db)
View(rs)
rs@Id
dataframe<-dbFetch(rs, n = -1)
#4 - segunda forma de obter dataframe com consulta
rs <- dbSendQuery(conn, "SELECT * FROM City LIMIT 1000;")
dataframe<-dbFetch(rs, n = -1)
dbClearResult(rs)
#4 - segunda forma de obter dataframe com consulta
rs <- dbSendQuery(conn, "SELECT * FROM City;")
dataframe<-dbFetch(rs, n = -1)
dbClearResult(rs)
str(dataframe)
#terminou o trabalho?
dbDisconnect(conn)
str(dataframe)
library("DBI")
library("odbc")
library("dplyr")
library("DBI")
library("odbc")
library("dplyr")
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "world",
host = "localhost",
username = "root",
password = "Mysql_2022") #seu password
#4 - primeira forma de obter dataframe com consulta
rs <- dbSendQuery(conn, "SELECT GNP,LifeExpectancy FROM world.country WHERE IndepYear IS NOT NULL;")
dataframe<-dbFetch(rs, n = -1)
View(dataframe)
View(dataframe)
#testes no dataframe com dplyr
dataframe %>% select(GNP)
#testes no dataframe com dplyr
DB_TEST <- dataframe %>% select(GNP)
View(DB_TEST)
View(dataframe)
DB_TEST2 <- dataframe %>% filter(LifeExpectancy > 50)
View(DB_TEST2)
DB_TEST3 <- dataframe %>% summarise(media = mean(LifeExpectancy))
View(DB_TEST3)
DB_TEST3 <- dataframe %>% summarise(media = mean(LifeExpectancy, na.rm = TRUE))
View(DB_TEST3)
table <- tbl(conn, "country") %>% select(GNP,LifeExpectancy)
View(table)
table[["src"]]
q1 <- tbl(conn, "country") %>% select(GNP,LifeExpectancy)
show_query(q1)
#Segunda forma de obter dataframe com consulta
dbListTables(conn)
q1 <- tbl(conn, "country")
q1
pacotes <- c("odbc","DBI","dplyr","tidyverse","dbplyr")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
library("dbplyr")
q1 %>% %>% select(GNP,LifeExpectancy)
q1 %>% select(GNP,LifeExpectancy)
table2 <- q1 %>% select(GNP,LifeExpectancy)
View(table2)
q1 %>% select(GNP,LifeExpectancy)
q1 %>% %>% collect()
q1 %>% collect()
table2 <- q1 %>% collect()
View(table2)
q1 <- tbl(conn, "country")
q1
table1 %>% select(GNP,LifeExpectancy) %>% filter(LifeExpectancy > 50)
table1 <- tbl(conn, "country")
table1
table1 %>% select(GNP,LifeExpectancy)
table1 %>% select(GNP,LifeExpectancy) %>% filter(LifeExpectancy > 50)
#Pacotes
library("DBI")
library("odbc")
library("dplyr")
library("dbplyr")
# Realiza uma conexão com o MySql
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "sakila",
host = "localhost",
username = "root",
password = "Mysql_2022") #seu password
#Pacotes
library("DBI")
library("odbc")
library("dplyr")
library("dbplyr")
# Realiza uma conexão com o MySql
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "sakila",
host = "localhost",
username = "root",
password = "Mysql_2022") #seu password
dbListTables(conn)
dbListFields(conn,"film")
table1 <- tbl(conn, "film")
tbl(conn, "film")
table1 %>% select(rental_duration)
dbListFields(conn,"payment")
table1 <- tbl(conn, "payment")
#Pacotes
library("DBI")
library("odbc")
library("dplyr")
library("dbplyr")
# Realiza uma conexão com o MySql
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "world",
host = "localhost",
username = "root",
password = "Mysql_2022") #seu password
dbListTables(conn)
dbListFields(conn,"country")
tbl(conn, "country")
dbListFields(conn,"country")
table1 %>% select(Population)
table1 %>% select(Population)
table1 <- tbl(conn, "country") %>% select(Population)
tbl(conn, "country") %>% select(Population)
table1 %>% select(Population)
table1 <- tbl(conn, "country")
table1 %>% select(Population)
#Pacotes
library("DBI")
library("odbc")
library("dplyr")
library("dbplyr")
# Realiza uma conexão com o MySql
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "world",
host = "localhost",
username = "root",
password = "Mysql_2022") #seu password
dbListTables(conn)
dbListFields(conn,"country")
table1 <- tbl(conn, "country")
table1 %>% select(Population)
table1 %>% select(Population) %>% summarise(pop_media = mean(Population, na.rm = TRUE))
table1 %>% summarise(pop_media = mean(Population, na.rm = TRUE))
table1 %>% select(Population)
table1 <- table1 %>% select(Population)
table1 %>% summarise(pop_media = mean(Population, na.rm = TRUE))
table1 %>% summarise(pop_media = mean(Population))
tbl(conn, "country")  %>% select(Population) %>% summarise(pop_media = mean(Population, na.rm = TRUE))
tbl(conn, "country")
tbl(conn, "country")  %>% select(Population)
tbl(conn, "country")  %>% select(Population) %>% summarise(pop_media = sum(Population, na.rm = TRUE))
table1 %>% select(Population)
table1 %>% select(Population) %>% group_by(Population)
table1 %>% select(Population) %>% summarise(pop = mean(Population))
table1 %>% summarise(pop = mean(Population))
table1 %>% select(Population) %>% summarise(pop = n())
table1 <- tbl(conn, "country")
table1 %>% select(Population) %>% filter(Population> 10)
table1 %>% select(Population) %>% filter(Population> 100000)
table1 %>% select(Population) %>% summarise(pop = mean(Population))
show_query(table1)
dbListFields(conn,"country")
table1 <- tbl(conn, "country") %>% select(Code)
show_query(table1)
table1 <- tbl(conn, "country") %>% select(GNP)
show_query(table1)
table1 %>% summarise(pop = mean(GNP))
table1 <- tbl(conn, "country") %>% select(GNP)%>% summarise(pop = mean(GNP))
show_query(table1)
table1 <- tbl(conn, "country") %>%  summarise(pop = mean(GNP))
show_query(table1)
table1
table1 <- tbl(conn, "country") %>%  summarise(pop = mean(GNP)) %>% select(pop)
show_query(table1)
table1
#Pacotes
library("DBI")
library("odbc")
library("dplyr")
library("dbplyr")
# Realiza uma conexão com o MySql
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "world",
host = "localhost",
username = "root",
password = "Mysql_2022") #seu password
dbListTables(conn)
dbListFields(conn,"countrylanguage")
table1 <- tbl(conn, "countrylanguage") %>% select(Percentage)
show_query(table1)
tbl(conn, "countrylanguage") %>% select(Percentage) %>% filter(Percentage> 50)
result <- tbl(conn, "countrylanguage") %>% select(Percentage)
%>% filter(Percentage> 50)
%>% collect()
result <- tbl(conn, "countrylanguage") %>% select(Percentage) %>% filter(Percentage> 50)%>% collect()
View(result)
result <- tbl(conn, "countrylanguage") %>% select(CountryCode,Language,Percentage) %>% filter(Percentage> 50)%>% collect()
View(result)
#Pacotes
library("DBI")
library("odbc")
library("dplyr")
library("dbplyr")
# Realiza uma conexão com o MySql
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "world",
host = "localhost",
username = "root",
password = "Mysql_2022") #seu password
#Primeira forma de obter dataframe com consulta
rs <- dbSendQuery(conn, "SELECT GNP,LifeExpectancy FROM world.country WHERE IndepYear IS NOT NULL;")
dataframe<-dbFetch(rs, n = -1)
#testes no dataframe com dplyr
DB_TEST <- dataframe %>% select(GNP)
DB_TEST2 <- dataframe %>% filter(LifeExpectancy > 50)
DB_TEST3 <- dataframe %>% summarise(media = mean(LifeExpectancy, na.rm = TRUE))
#Segunda forma de obter dataframe com consulta
dbListTables(conn)
?tbl
table1 <- tbl(conn, "country")
table1
table1 %>% select(GNP,LifeExpectancy)
show_query(table1)
table1 %>% select(GNP,LifeExpectancy)
show_query(table1)
q1 <- table1 %>% select(GNP,LifeExpectancy)
show_query(q1)
table1 %>% select(GNP,LifeExpectancy) %>% filter(LifeExpectancy > 50)
table2 <- table1 %>% select(GNP,LifeExpectancy) %>% filter(LifeExpectancy > 50) %>% collect()
View(table2)
